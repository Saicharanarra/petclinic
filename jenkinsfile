pipeline {
	agent any
	tools {
		maven 'M3.6'
	}
	stages {
		//stage('Sonar Scanner') {
		//	steps {
		//		withSonarQubeEnv('Sonar') {
    		//			sh "mvn sonar:sonar"
		//		}
		//	}
		//}
		stage('Build') {
			steps {
				sh "mvn clean package"
			}
		}
		stage('Parallel Stages') {
			parallel {
				stage('Archival') {
					steps {
						archiveArtifacts artifacts: 'target/*.?ar', followSymlinks: false
					}
				}
				stage('Unit Tests') {
					steps { 
						junit 'target/surefire-reports/*.xml'
					}
				}
				stage('Nexus Uploader') {
					steps { 
						nexusArtifactUploader artifacts: [[artifactId: 'spring-petclinic', classifier: '', file: 'target/petclinic.war', type: 'war']], credentialsId: 'nexuscred', groupId: 'org.springframework.samples', nexusUrl: '3.15.6.189:8081/nexus', nexusVersion: 'nexus2', protocol: 'http', repository: 'releases', version: '4.2.6'
					}
				}
			}
		}
	}
	post {
		success {
			notify('Success') 
		}
		failure {
			notify('Failed') 
		}
	}
}

def notify(status) {
	emailext (
		to: 'srujansamalla0007@gmail.com',
		subject: "${status} - ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
		body: "$status ${env.BUILD_NUMBER} - Jenkins job ${env.BUILD_URL}"
	)
}
